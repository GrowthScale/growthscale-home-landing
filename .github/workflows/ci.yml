# =====================================================
# CI PIPELINE - GROWTHSCALE
# Pipeline de integra√ß√£o cont√≠nua
# =====================================================

name: GrowthScale CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '18'
  # Vari√°veis de ambiente com fallbacks
  SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN || '' }}
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID || '' }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID || '' }}

jobs:
  # =====================================================
  # QUALIDADE E SEGURAN√áA
  # =====================================================
  
  quality:
    name: Quality & Security
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run ESLint
        run: npm run lint
        
      - name: Run TypeScript check
        run: npm run type-check
        
      - name: Check formatting
        run: npm run format:check
        
      - name: Run security audit
        run: npm audit --audit-level=moderate
        
      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high
        continue-on-error: true

  # =====================================================
  # TESTES
  # =====================================================
  
  tests:
    name: Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run unit tests
        run: npm run test:unit
        
      - name: Run E2E tests
        run: npm run test:e2e

  # =====================================================
  # PERFORMANCE E BUILD
  # =====================================================
  
  performance:
    name: Performance & Build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build application
        run: npm run build
        
      - name: Analyze bundle size
        run: npm run analyze
        
      - name: Check bundle size limits
        run: |
          # Verificar se o bundle principal n√£o excede 500KB
          BUNDLE_SIZE=$(du -k dist/assets/index-*.js | cut -f1)
          if [ "$BUNDLE_SIZE" -gt 500 ]; then
            echo "‚ùå Bundle size ($BUNDLE_SIZE KB) exceeds 500KB limit"
            exit 1
          else
            echo "‚úÖ Bundle size ($BUNDLE_SIZE KB) is within limits"
          fi
          
  # =====================================================
  # DEPLOY STAGING
  # =====================================================
  
  deploy-staging:
    runs-on: ubuntu-latest
    name: Deploy to Staging
    needs: [quality, tests, performance]
    if: github.ref == 'refs/heads/develop'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Deploy to Vercel (Staging)
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
        continue-on-error: true
          
  # =====================================================
  # DEPLOY PRODU√á√ÉO
  # =====================================================
  
  deploy-production:
    runs-on: ubuntu-latest
    name: Deploy to Production
    needs: [quality, tests, performance]
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Deploy to Vercel (Production)
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
        continue-on-error: true
          
      - name: Notify deployment
        run: |
          echo "üöÄ Production deployment completed!"
          echo "URL: https://growthscale-home-landing.vercel.app"
