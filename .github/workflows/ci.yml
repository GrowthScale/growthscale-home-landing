name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  quality:
    runs-on: ubuntu-latest
    name: Quality Check
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Type check
        run: npm run type-check
        
      - name: Lint code
        run: npm run lint
        
      - name: Format check
        run: npm run format:check
        
      - name: Security audit
        run: npm audit --audit-level=moderate
        
      - name: Run tests
        run: npm run test:coverage
        
      - name: Build application
        run: npm run build
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: dist/
          
  security:
    runs-on: ubuntu-latest
    name: Security Scan
    needs: quality
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Run SAST scan
        uses: github/codeql-action/init@v3
        with:
          languages: javascript
          
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        
      - name: Run dependency scan
        run: |
          npm audit --audit-level=high
          npm audit --audit-level=critical
          
  performance:
    runs-on: ubuntu-latest
    name: Performance Check
    needs: quality
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build application
        run: npm run build
        
      - name: Analyze bundle size
        run: npm run analyze
        
      - name: Check bundle size limits
        run: |
          # Verificar se o bundle principal n√£o excede 500KB
          BUNDLE_SIZE=$(du -k dist/assets/index-*.js | cut -f1)
          if [ "$BUNDLE_SIZE" -gt 500 ]; then
            echo "‚ùå Bundle size ($BUNDLE_SIZE KB) exceeds 500KB limit"
            exit 1
          else
            echo "‚úÖ Bundle size ($BUNDLE_SIZE KB) is within limits"
          fi
          
  deploy-staging:
    runs-on: ubuntu-latest
    name: Deploy to Staging
    needs: [quality, security, performance]
    if: github.ref == 'refs/heads/develop'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Check Vercel Configuration
        run: |
          if [ -z "${{ secrets.VERCEL_TOKEN }}" ]; then
            echo "‚ö†Ô∏è VERCEL_TOKEN not configured. Skipping deployment."
            exit 0
          fi
          if [ -z "${{ secrets.VERCEL_ORG_ID }}" ]; then
            echo "‚ö†Ô∏è VERCEL_ORG_ID not configured. Skipping deployment."
            exit 0
          fi
          if [ -z "${{ secrets.VERCEL_PROJECT_ID }}" ]; then
            echo "‚ö†Ô∏è VERCEL_PROJECT_ID not configured. Skipping deployment."
            exit 0
          fi
          echo "‚úÖ Vercel configuration found. Proceeding with deployment."
        
      - name: Deploy to Vercel (Staging)
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          
  deploy-production:
    runs-on: ubuntu-latest
    name: Deploy to Production
    needs: [quality, security, performance]
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Check Vercel Configuration
        run: |
          if [ -z "${{ secrets.VERCEL_TOKEN }}" ]; then
            echo "‚ö†Ô∏è VERCEL_TOKEN not configured. Skipping deployment."
            exit 0
          fi
          if [ -z "${{ secrets.VERCEL_ORG_ID }}" ]; then
            echo "‚ö†Ô∏è VERCEL_ORG_ID not configured. Skipping deployment."
            exit 0
          fi
          if [ -z "${{ secrets.VERCEL_PROJECT_ID }}" ]; then
            echo "‚ö†Ô∏è VERCEL_PROJECT_ID not configured. Skipping deployment."
            exit 0
          fi
          echo "‚úÖ Vercel configuration found. Proceeding with deployment."
        
      - name: Deploy to Vercel (Production)
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          
      - name: Notify deployment
        run: |
          echo "üöÄ Production deployment completed!"
          echo "URL: https://growthscale-home-landing.vercel.app"
