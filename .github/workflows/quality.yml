name: 🔍 Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  quality-check:
    name: 🔍 Quality Check
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 Run TypeScript check
        run: npm run type-check

      - name: 🧹 Run ESLint
        run: npm run lint

      - name: 💅 Run Prettier check
        run: npm run format:check

      - name: 🏗️ Run build
        run: npm run build

  dependency-audit:
    name: 📦 Dependency Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 Check for outdated dependencies
        run: npx npm-check-updates --target minor

      - name: 🔒 Check for vulnerabilities
        run: npm audit --audit-level=moderate

  bundle-analysis:
    name: 📊 Bundle Analysis
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🏗️ Build with analysis
        run: npm run build

      - name: 📊 Analyze bundle size
        run: |
          echo "Bundle size analysis:"
          du -sh dist/
          echo "Largest files:"
          find dist/ -name "*.js" -exec du -h {} + | sort -hr | head -10

  report:
    name: 📊 Quality Report
    runs-on: ubuntu-latest
    needs: [quality-check, dependency-audit]
    if: always()
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📊 Generate quality report
        run: |
          echo "🔍 Code Quality Report" > quality-report.md
          echo "=====================" >> quality-report.md
          echo "" >> quality-report.md
          echo "Date: $(date)" >> quality-report.md
          echo "Branch: ${{ github.ref }}" >> quality-report.md
          echo "" >> quality-report.md
          
          # Adicionar resultados dos jobs
          echo "## Job Results" >> quality-report.md
          echo "- Quality Check: ${{ needs.quality-check.result }}" >> quality-report.md
          echo "- Dependency Audit: ${{ needs.dependency-audit.result }}" >> quality-report.md
          
          echo "" >> quality-report.md
          echo "## Recommendations" >> quality-report.md
          echo "1. Fix any linting errors" >> quality-report.md
          echo "2. Update dependencies if needed" >> quality-report.md
          echo "3. Review bundle size" >> quality-report.md
          echo "4. Ensure TypeScript strict mode compliance" >> quality-report.md

      - name: 📤 Upload quality report
        uses: actions/upload-artifact@v4
        with:
          name: quality-report
          path: quality-report.md
