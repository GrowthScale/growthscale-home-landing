#!/bin/bash

# Script para configurar a fun√ß√£o de gera√ß√£o de rascunhos semanais
# Este script automatiza o processo de deploy e configura√ß√£o

set -e

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fun√ß√µes de log
log_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# Fun√ß√£o para verificar se o Supabase CLI est√° instalado
check_supabase_cli() {
    if ! command -v supabase &> /dev/null; then
        log_error "Supabase CLI n√£o est√° instalado."
        log_info "Instale com: npm install -g supabase"
        exit 1
    fi
    log_success "Supabase CLI encontrado"
}

# Fun√ß√£o para verificar se est√° logado no Supabase
check_supabase_login() {
    if ! supabase status &> /dev/null; then
        log_error "N√£o est√° logado no Supabase."
        log_info "Execute: supabase login"
        exit 1
    fi
    log_success "Logado no Supabase"
}

# Fun√ß√£o para verificar se o projeto est√° linkado
check_project_linked() {
    if [ ! -f "supabase/config.toml" ]; then
        log_error "Projeto n√£o est√° linkado ao Supabase."
        log_info "Execute: supabase link --project-ref SEU_PROJECT_REF"
        exit 1
    fi
    log_success "Projeto linkado ao Supabase"
}

# Fun√ß√£o para criar a tabela schedule_drafts
create_schedule_drafts_table() {
    log_info "Criando tabela schedule_drafts..."
    
    if [ -f "supabase/schedule-drafts-table.sql" ]; then
        # Executar o script SQL
        supabase db push --include-all
        log_success "Tabela schedule_drafts criada com sucesso"
    else
        log_error "Arquivo supabase/schedule-drafts-table.sql n√£o encontrado"
        exit 1
    fi
}

# Fun√ß√£o para fazer deploy da fun√ß√£o
deploy_function() {
    log_info "Fazendo deploy da fun√ß√£o generate-weekly-drafts..."
    
    if [ -f "supabase/functions/generate-weekly-drafts/index.ts" ]; then
        supabase functions deploy generate-weekly-drafts
        log_success "Fun√ß√£o generate-weekly-drafts deployada com sucesso"
    else
        log_error "Arquivo da fun√ß√£o n√£o encontrado"
        exit 1
    fi
}

# Fun√ß√£o para configurar o cron job
setup_cron_job() {
    log_info "Configurando cron job para execu√ß√£o semanal..."
    
    # Verificar se o cron job j√° existe
    if supabase functions list | grep -q "generate-weekly-drafts"; then
        log_warning "Fun√ß√£o j√° existe. Atualizando configura√ß√£o..."
    fi
    
    # Configurar para executar toda segunda-feira √†s 6:00 AM
    # Nota: O Supabase n√£o tem cron nativo, ent√£o usaremos um servi√ßo externo
    log_info "Para automatizar a execu√ß√£o semanal, voc√™ pode:"
    log_info "1. Usar GitHub Actions com cron"
    log_info "2. Usar Vercel Cron Jobs"
    log_info "3. Usar um servi√ßo como cron-job.org"
    log_info ""
    log_info "URL da fun√ß√£o: https://SEU_PROJECT_REF.supabase.co/functions/v1/generate-weekly-drafts"
}

# Fun√ß√£o para testar a fun√ß√£o
test_function() {
    log_info "Testando a fun√ß√£o generate-weekly-drafts..."
    
    # Fazer uma chamada de teste
    PROJECT_REF=$(grep -o 'project_id = "[^"]*"' supabase/config.toml | cut -d'"' -f2)
    
    if [ -n "$PROJECT_REF" ]; then
        log_info "Fazendo chamada de teste para a fun√ß√£o..."
        curl -X POST "https://$PROJECT_REF.supabase.co/functions/v1/generate-weekly-drafts" \
             -H "Authorization: Bearer $(supabase secrets list | grep SUPABASE_SERVICE_ROLE_KEY | cut -d'=' -f2)" \
             -H "Content-Type: application/json" \
             -d '{"test": true}' || log_warning "Teste falhou (pode ser normal se n√£o h√° dados)"
        
        log_success "Teste conclu√≠do"
    else
        log_warning "N√£o foi poss√≠vel determinar o PROJECT_REF para teste"
    fi
}

# Fun√ß√£o para gerar relat√≥rio
generate_report() {
    log_info "Gerando relat√≥rio de configura√ß√£o..."
    
    echo ""
    echo "üìã RELAT√ìRIO DE CONFIGURA√á√ÉO DOS RASCUNHOS SEMANAIS"
    echo "=================================================="
    echo ""
    echo "‚úÖ Tabela schedule_drafts criada"
    echo "‚úÖ Fun√ß√£o generate-weekly-drafts deployada"
    echo "‚úÖ Pol√≠ticas RLS configuradas"
    echo "‚úÖ √çndices de performance criados"
    echo ""
    echo "üìÖ PR√ìXIMOS PASSOS:"
    echo "1. Configure um cron job externo para executar semanalmente"
    echo "2. Teste a fun√ß√£o manualmente se necess√°rio"
    echo "3. Monitore os logs no painel do Supabase"
    echo ""
    echo "üîó URL da fun√ß√£o: https://$(grep -o 'project_id = "[^"]*"' supabase/config.toml | cut -d'"' -f2).supabase.co/functions/v1/generate-weekly-drafts"
    echo ""
    echo "üìö DOCUMENTA√á√ÉO:"
    echo "- Tabela: schedule_drafts"
    echo "- Status: pending_review, approved, dismissed"
    echo "- Execu√ß√£o: Semanal (segunda-feira)"
    echo ""
}

# Fun√ß√£o principal
main() {
    echo "üöÄ CONFIGURANDO SISTEMA DE RASCUNHOS SEMANAIS"
    echo "============================================="
    echo ""
    
    # Verifica√ß√µes iniciais
    check_supabase_cli
    check_supabase_login
    check_project_linked
    
    # Executar configura√ß√µes
    create_schedule_drafts_table
    deploy_function
    setup_cron_job
    test_function
    
    # Gerar relat√≥rio final
    generate_report
    
    log_success "Configura√ß√£o dos rascunhos semanais conclu√≠da!"
}

# Executar fun√ß√£o principal
main "$@"
